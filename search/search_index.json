{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to the nomad-uibk-plugin documentation \u00b6 Introduction \u00b6 This software is a plugin for the NOMAD research data management system. It provides a collection of schemas and parsers tailored to measurement methods around fundamental solar cell research. It is intended to run on a self-hosted version of NOMAD called Oasis . Tutorial \u00b6 Tutorials offer practical, hands-on examples to help users grasp the functionality of the plugin. They focus on guiding users through specific tasks and workflows, providing a learning-by-doing approach to mastering the plugin's features. IFM Tutorial How-to guides \u00b6 How-to guides provide step-by-step instructions for a wide range of tasks, with the overarching topics: Install this plugin Use this plugin Contribute to this plugin Explanation \u00b6 The explanation section provides background knowledge on this plugin. Reference \u00b6 The reference section includes all CLI commands and arguments, all configuration options, the possible schema annotations and their arguments, and a glossary of used terms.","title":"Home"},{"location":"index.html#welcome-to-the-nomad-uibk-plugin-documentation","text":"","title":"Welcome to the nomad-uibk-plugin documentation"},{"location":"index.html#introduction","text":"This software is a plugin for the NOMAD research data management system. It provides a collection of schemas and parsers tailored to measurement methods around fundamental solar cell research. It is intended to run on a self-hosted version of NOMAD called Oasis .","title":"Introduction"},{"location":"index.html#tutorial","text":"Tutorials offer practical, hands-on examples to help users grasp the functionality of the plugin. They focus on guiding users through specific tasks and workflows, providing a learning-by-doing approach to mastering the plugin's features. IFM Tutorial","title":"Tutorial"},{"location":"index.html#how-to-guides","text":"How-to guides provide step-by-step instructions for a wide range of tasks, with the overarching topics: Install this plugin Use this plugin Contribute to this plugin","title":"How-to guides"},{"location":"index.html#explanation","text":"The explanation section provides background knowledge on this plugin.","title":"Explanation"},{"location":"index.html#reference","text":"The reference section includes all CLI commands and arguments, all configuration options, the possible schema annotations and their arguments, and a glossary of used terms.","title":"Reference"},{"location":"explanation/explanation.html","text":"Explanation \u00b6 Attention TODO","title":"Explanation"},{"location":"explanation/explanation.html#explanation","text":"Attention TODO","title":"Explanation"},{"location":"how_to/contribute_to_this_plugin.html","text":"Contribute to This Plugin \u00b6 This code is currently under development. To contribute to this project, you should clone the respective repository, install it and create a pull request following the standard procedure.: git clone git@github.com:fabianschoeppach/nomad-UIBK-plugin.git cd nomad-UIBK-plugin Contribute to the Documentation \u00b6 This project uses mkdocs to publish its documentation. Its content is entirely stored within markdown files ( .md ) in the docs/ directory. A Github workflow deploys automatically updated documentation after commits to the main branch. See the official mkdocs documentation for more details. To view the documentation locally, install the documentation related packages and run the documentation server: pip install -r requirements_docs.txt mkdocs serve","title":"Contribute to this plugin"},{"location":"how_to/contribute_to_this_plugin.html#contribute-to-this-plugin","text":"This code is currently under development. To contribute to this project, you should clone the respective repository, install it and create a pull request following the standard procedure.: git clone git@github.com:fabianschoeppach/nomad-UIBK-plugin.git cd nomad-UIBK-plugin","title":"Contribute to This Plugin"},{"location":"how_to/contribute_to_this_plugin.html#contribute-to-the-documentation","text":"This project uses mkdocs to publish its documentation. Its content is entirely stored within markdown files ( .md ) in the docs/ directory. A Github workflow deploys automatically updated documentation after commits to the main branch. See the official mkdocs documentation for more details. To view the documentation locally, install the documentation related packages and run the documentation server: pip install -r requirements_docs.txt mkdocs serve","title":"Contribute to the Documentation"},{"location":"how_to/install_this_plugin.html","text":"Install This Plugin \u00b6 For Usage in an NOMAD Distribution Image \u00b6 To use this plugin in an NOMAD distribution image such as this one simply list it in the plugin.txt . Stand alone \u00b6 To install this package, it is recommended to create and activate a virtual environment. This practice isolates the package dependencies and prevents conflicts with other globally installed Python packages. Since the codebase of NOMAD is currently based on Python 3.9, using that version is recommended. python3.9 -m venv .pyenv source .pyenv/bin/activate The nomad-lab package is needed to use and test the plugin functionalities: pip install --upgrade pip pip install -e '.[dev]' --index-url https://gitlab.mpcdf.mpg.de/api/v4/projects/2187/packages/pypi/simple Info As of now, there is no official pypi NOMAD release with the plugin functionality. Therefore, make sure to include internal package registry of NOMAD (e.g. via --index-url ).","title":"Install this Plugin"},{"location":"how_to/install_this_plugin.html#install-this-plugin","text":"","title":"Install This Plugin"},{"location":"how_to/install_this_plugin.html#for-usage-in-an-nomad-distribution-image","text":"To use this plugin in an NOMAD distribution image such as this one simply list it in the plugin.txt .","title":"For Usage in an NOMAD Distribution Image"},{"location":"how_to/install_this_plugin.html#stand-alone","text":"To install this package, it is recommended to create and activate a virtual environment. This practice isolates the package dependencies and prevents conflicts with other globally installed Python packages. Since the codebase of NOMAD is currently based on Python 3.9, using that version is recommended. python3.9 -m venv .pyenv source .pyenv/bin/activate The nomad-lab package is needed to use and test the plugin functionalities: pip install --upgrade pip pip install -e '.[dev]' --index-url https://gitlab.mpcdf.mpg.de/api/v4/projects/2187/packages/pypi/simple Info As of now, there is no official pypi NOMAD release with the plugin functionality. Therefore, make sure to include internal package registry of NOMAD (e.g. via --index-url ).","title":"Stand alone"},{"location":"how_to/use_this_plugin.html","text":"How to Use This Plugin \u00b6 This plugin can be used in a NOMAD Oasis installation. Add This Plugin to Your NOMAD installation \u00b6 Read the NOMAD plugin documentation for all details on how to deploy the plugin on your NOMAD instance. TODO This project is currently under development.","title":"Use this Plugin"},{"location":"how_to/use_this_plugin.html#how-to-use-this-plugin","text":"This plugin can be used in a NOMAD Oasis installation.","title":"How to Use This Plugin"},{"location":"how_to/use_this_plugin.html#add-this-plugin-to-your-nomad-installation","text":"Read the NOMAD plugin documentation for all details on how to deploy the plugin on your NOMAD instance. TODO This project is currently under development.","title":"Add This Plugin to Your NOMAD installation"},{"location":"reference/references.html","text":"References \u00b6 TODO This project is currently under development. This documentation will be extended in the future.","title":"Reference"},{"location":"reference/references.html#references","text":"TODO This project is currently under development. This documentation will be extended in the future.","title":"References"},{"location":"tutorial/tutorial.html","text":"Tutorials \u00b6 IFM Tutorial Stay tuned for more tutorials coming soon!","title":"Tutorials"},{"location":"tutorial/tutorial.html#tutorials","text":"IFM Tutorial Stay tuned for more tutorials coming soon!","title":"Tutorials"},{"location":"tutorial/tutorial_ifm.html","text":"Using Automated Defect Analysis on IFM Images \u00b6 This tutorial is to demonstrate how to perform an automated defect analysis on IFM images. To execute the analysis, there need to be three NOMAD entries present: an IFM Measurement type entry with associated microscopy file two IFM Model type entries, each with the respective .keras model file Depending on your knowledge and on which entries you have already present, you may jump ahead to the IFM Analysis subsection. Uploads \u00b6 NOMAD Uploads page : Navigate to your Uploads page, reachable under PUBLISH > Uploads . Enter upload : You might need to create a new new upload using or edit an existing one. IFM Measurement Entry \u00b6 Create a new entry : Create a new entry via the button Create from Schema . Give it a name and select IFM Measurement as type. Assign the measurement files : You should now see the data section of the created entry. Assign an image and a metadata file. Don't forget to click the save button in the top right corner afterwards! Automated XML Parsing : As soon as a XML file is assigned, the plugin extracts metadata from it, such as: exposure time start and end time magnification If you have a UIBKSample entry already present with the same lab_id as extracted from the XML file, the entry automatically creates a reference to it. IFM Model \u00b6 Perform the same steps as above for creating two IFM Model entries: Create a new entry : Create a new entry via the button Create from Schema . Give it a name and select IFM Model as type. Assign the measurement files : You should now see the data section of the created entry. Assign an image and a metadata file. Don't forget to click the save button in the top right corner afterwards! Automated Parsing : As soon as the .keras file is assigned, the plugin extracts metadata from it, such as: model type (binary/classification) number of layers number of parameters IFM Analysis \u00b6 At this point, your NOMAD upload should contain at least one IFMMeasurement entry and two IFMModel entries: To perform the analysis on this measurement perform the following steps: Create a new IFMAnalysis entry : Assign the measurement entry : Create a new input section by clicking the plus icon: Click on the pen icon to assign an existing entry: Select the IFMMeasurement entry you want to analyze: Save this change: Assign the models : Repeat the steps from above to assign both IFMModel entries as well: Check 'perform analysis' : By opting the 'perform analysis' checkbox (and saving) the image analysis is triggered: Results : Execution of the code can take up to several minutes. Results are stored in a csv file that is referenced in the output section of the IFMAnalsis entry: From these results, a heatmap of the spatial distribution of detected defects is generated, and the prevalence of classified defects is calculated.","title":"IFM Tutorial"},{"location":"tutorial/tutorial_ifm.html#using-automated-defect-analysis-on-ifm-images","text":"This tutorial is to demonstrate how to perform an automated defect analysis on IFM images. To execute the analysis, there need to be three NOMAD entries present: an IFM Measurement type entry with associated microscopy file two IFM Model type entries, each with the respective .keras model file Depending on your knowledge and on which entries you have already present, you may jump ahead to the IFM Analysis subsection.","title":"Using Automated Defect Analysis on IFM Images"},{"location":"tutorial/tutorial_ifm.html#uploads","text":"NOMAD Uploads page : Navigate to your Uploads page, reachable under PUBLISH > Uploads . Enter upload : You might need to create a new new upload using or edit an existing one.","title":"Uploads"},{"location":"tutorial/tutorial_ifm.html#ifm-measurement-entry","text":"Create a new entry : Create a new entry via the button Create from Schema . Give it a name and select IFM Measurement as type. Assign the measurement files : You should now see the data section of the created entry. Assign an image and a metadata file. Don't forget to click the save button in the top right corner afterwards! Automated XML Parsing : As soon as a XML file is assigned, the plugin extracts metadata from it, such as: exposure time start and end time magnification If you have a UIBKSample entry already present with the same lab_id as extracted from the XML file, the entry automatically creates a reference to it.","title":"IFM Measurement Entry"},{"location":"tutorial/tutorial_ifm.html#ifm-model","text":"Perform the same steps as above for creating two IFM Model entries: Create a new entry : Create a new entry via the button Create from Schema . Give it a name and select IFM Model as type. Assign the measurement files : You should now see the data section of the created entry. Assign an image and a metadata file. Don't forget to click the save button in the top right corner afterwards! Automated Parsing : As soon as the .keras file is assigned, the plugin extracts metadata from it, such as: model type (binary/classification) number of layers number of parameters","title":"IFM Model"},{"location":"tutorial/tutorial_ifm.html#ifm-analysis","text":"At this point, your NOMAD upload should contain at least one IFMMeasurement entry and two IFMModel entries: To perform the analysis on this measurement perform the following steps: Create a new IFMAnalysis entry : Assign the measurement entry : Create a new input section by clicking the plus icon: Click on the pen icon to assign an existing entry: Select the IFMMeasurement entry you want to analyze: Save this change: Assign the models : Repeat the steps from above to assign both IFMModel entries as well: Check 'perform analysis' : By opting the 'perform analysis' checkbox (and saving) the image analysis is triggered: Results : Execution of the code can take up to several minutes. Results are stored in a csv file that is referenced in the output section of the IFMAnalsis entry: From these results, a heatmap of the spatial distribution of detected defects is generated, and the prevalence of classified defects is calculated.","title":"IFM Analysis"}]}